generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Entity {
  id           String     @id @default(uuid())
  entityName   String     @unique
  entityNote   String?
  active       Boolean    @default(true)
  contactName  String?
  contactEmail String?
  contactPhone String?
  address      String?
  city         String?
  state        String?
  zip          String?
  properties   Property[]
}

model Property {
  id           String     @id @default(uuid())
  entityId     String
  propertyName String     @unique
  propertyNote String?    @db.Text
  active       Boolean    @default(true)
  contactName  String?
  contactEmail String?
  contactPhone String?
  address      String?
  city         String?
  state        String?
  zip          String?
  buildings    Building[]
  entity       Entity     @relation(fields: [entityId], references: [id], onUpdate: NoAction)
}

model Building {
  id             String   @id @default(uuid())
  propertyId     String
  buildingNumber String?
  buildingNote   String?  @db.Text
  active         Boolean  @default(true)
  property       Property @relation(fields: [propertyId], references: [id], onUpdate: NoAction)
  units          Unit[]

  @@unique([propertyId, buildingNumber])
}

model Unit {
  id           String      @id @default(uuid())
  buildingId   String
  unitNumber   String?
  unitNote     String?     @db.Text
  active       Boolean     @default(true)
  contactName  String?
  contactEmail String?
  contactPhone String?
  address      String?
  city         String?
  state        String?
  zip          String?
  equipment    Equipment[]
  building     Building    @relation(fields: [buildingId], references: [id], onUpdate: NoAction)

  @@unique([buildingId, unitNumber])
}

model EquipmentType {
  id                String      @id @default(uuid())
  equipmentTypeName String      @unique
  equipmentTypeNote String?     @db.Text
  active            Boolean     @default(true)
  equipment         Equipment[]
}

model Manufacturer {
  id               String      @id @default(uuid())
  manufacturerName String      @unique
  active           Boolean     @default(true)
  equipment        Equipment[]
}

model Equipment {
  id                String          @id @default(uuid())
  unitId            String?
  equipmentTypeId   String
  manufacturerId    String?
  purchaseDate      DateTime?
  purchasePrice     Float?
  purchasedFrom     String?
  modelNumber       String?
  serialNumber      String?
  warrantyDate      DateTime?
  active            Boolean         @default(true)
  equipmentStatusId Int             @default(1)
  equipmentNote     String?         @db.Text
  equipmentStatus   EquipmentStatus @relation(fields: [equipmentStatusId], references: [id], onUpdate: NoAction)
  equipmentType     EquipmentType   @relation(fields: [equipmentTypeId], references: [id], onUpdate: NoAction)
  manufacturer      Manufacturer?   @relation(fields: [manufacturerId], references: [id], onUpdate: NoAction)
  unit              Unit?           @relation(fields: [unitId], references: [id], onUpdate: NoAction)
}

model EquipmentStatus {
  id        Int         @id
  status    String      @unique
  equipment Equipment[]
}

model State {
  abbreviation String @id @unique @db.VarChar(2)
  name         String @unique
}
